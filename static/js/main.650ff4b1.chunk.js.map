{"version":3,"sources":["redux/lab/lab.actions.js","pages/main-page/main-page.page.jsx","components/CodeBlock/code-block.component.jsx","pages/student-view/student-view.page.jsx","components/NavBar/nav-bar.component.jsx","App.js","redux/lab/lab.reducer.js","redux/root-reducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["setCurrentLab","lab","type","payload","MainPage","props","testClick","console","log","steps","title","markdown","copyText","checkResults","this","currentLab","Button","onClick","className","React","Component","connect","state","dispatch","CodeBlock","language","style","value","PreviousButton","disabled","CopyTextButton","step","hasOwnProperty","navigator","clipboard","writeText","StudentPage","gotoNextStep","nextStep","currentStep","willBeOnFirstStep","length","setState","disableNextStep","disablePreviousStep","gotoPreviousStep","areOnLastStep","previousStep","allowCopyText","source","renderers","code","checkResultsButton","NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","as","to","eventKey","Form","inline","FormControl","placeholder","variant","App","exact","path","component","INIITIAL_STATE","labReducer","action","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.650ff4b1.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst setCurrentLab = lab => ({\n    type: 'SET_CURRENT_LAB',\n    payload: lab\n});\n\nexport default setCurrentLab;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {Button} from 'react-bootstrap';\n\nimport setCurrentLab  from '../../redux/lab/lab.actions';\n\nimport './main-page.styles.css';\n\n\nclass MainPage extends React.Component {\n    // eslint-disable-next-line\n    constructor(props) {\n        super();\n        \n    }\n\n    testClick = () => {\n        console.log(\"Test Button clicked\");\n        const junk = {\n                steps:[\n                  {\n                    title: \"Sample Lab Step 1 from Redux\",\n                    markdown: \"### Step 1 - Insert a record\\n\" +\n                    \"testing adding some text\\n\" +\n                    \"testing adding some text\\n\" +\n                    \"### Heoping Kiley get Dallas\" +\n                    \"testing adding some text\\n `asdasdfasdf`\\n\" +\n                    \"```\\n\" +\n                    \"db.mycollection.insertOne({ name: 'fred'})\\n\" +\n                    \"```\\n\",\n                    copyText: \"db.mycollection.insertOne({ name: 'fred'})\",\n                    checkResults: \"asfasdf\"\n                  },\n                  {\n                    title: \"Sample Lab Step 2\",\n                    markdown: \"### Step 2 - Find a record\\n\" +\n                    \"```\\n\" +\n                    \"db.mycollection.findOne(\\n\" +\n                    \"                          {\\n\" +\n                    \"                            name: 'fred',\\n\" +\n                    \"                            city: 'Bedrock'\\n\" +\n                    \"                          }\\n\" +\n                    \"                        );\\n\" +\n                    \"```\",\n                    copyText: \"db.mycollection.findOne()\"\n                  },\n                  {\n                    title: \"Congratulations!!  You have completed this section.\",\n                    markdown:\"## Section Complete\",\n                    copyText: null\n                  }\n                ]\n              }\n\n        this.props.setCurrentLab(junk);\n\n    }\n\n    render() {\n        if (this.props.currentLab == null) {\n            return(\n            <div>\n                No Lab Selected<br/>\n                <Button onClick={this.testClick}>Use Sample Lab</Button>\n            </div>);\n        }\n        return(\n            <div className=\"container\">Main Page</div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    currentLab: state.lab.currentLab\n  })\n\nconst matchDispatchToProps = dispatch => ({\n    setCurrentLab: lab => dispatch(setCurrentLab(lab))\n})\n\n\nexport default connect(mapStateToProps, matchDispatchToProps)(MainPage);","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { docco as style } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { dark as style } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport './code-block.styles.css';\n\nclass CodeBlock extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    render() {\n\n        return (\n            <SyntaxHighlighter language=\"javascript\" style={style}>\n              {this.props.value}\n            </SyntaxHighlighter>\n          );\n        \n        // return(\n        //     <div className='CodeBlock'>\n        //         <pre>\n        //             {this.props.value}\n        //         </pre>\n        //     </div>\n        // );\n\n    }\n}\n\nexport default CodeBlock;","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../../components/CodeBlock/code-block.component';\n\nimport { connect } from 'react-redux';\n\nimport './student-view.styles.css';\n\nfunction PreviousButton(props) {\n    return (\n      <Button className='btn btn-secondary btn-spacing' onClick={props.onClick} disabled={props.disabled}>Previous</Button>\n    );\n  }\n  \nfunction CopyTextButton(props) {\n  var step = props.step;\n  console.log(\"Step in CopyTextButton Click():\",step);\n  if ((step.hasOwnProperty('copyText')) && ((step.copyText != null) && (step.copyText !== \"\"))) {\n    return(\n      <Button className='btn btn-success btn-spacing' onClick={() => {navigator.clipboard.writeText(step.copyText)}}>Copy Text</Button>\n    );\n  }\n  else {\n    return(\"\");\n  }\n}\n\nclass StudentPage extends React.Component {\n  constructor(props) {\n      super();\n      this.state = {\n        // currentLab: props.currentLab,\n        currentStep: 0,\n        disableNextStep: false,\n        disablePreviousStep: true,\n        allowCopyText: true\n      };\n    }\n  \n    gotoNextStep = () => {\n      //\n      // Setup some needed variables to make the code more readable\n      //\n      var currentStep = this.state.currentStep;\n      var nextStep = currentStep + 1;\n      // var lastStep = this.state.currentLab.steps.length;\n      var willBeOnLastStep = ( nextStep + 1 ) >= this.props.currentLab.steps.length;\n      var willBeOnFirstStep = nextStep === 0;\n\n      if (willBeOnLastStep) {\n        this.setState({disableNextStep: true}); // No more steps, disable the button\n      } else {\n        this.setState({disableNextStep: false});  // More steps left, enable the button\n      }\n  \n      if ( willBeOnFirstStep ) {\n        this.setState({disablePreviousStep: true});  // Enable the button\n      } else {\n        this.setState({disablePreviousStep: false});   // Disable the button\n      }\n\n      this.setState({currentStep: nextStep});   // Point to the next step\n\n    }\n  \n    gotoPreviousStep = () => {\n      //\n      // Setup some needed variables to make the code more readable\n      //\n      var currentStep = this.state.currentStep;\n      var nextStep = currentStep + 1;\n      var areOnLastStep = (nextStep + 1) > this.props.currentLab.steps.length;\n\n      var previousStep = this.state.currentStep - 1;\n\n      // See if there are more steps and adjust the NEXT button\n      if (areOnLastStep) {\n        console.log(\"gotoPreviousStep: On Last Step\");\n        this.setState({disableNextStep: true});     // No more steps, disable the button\n      } else {\n        console.log(\"gotoPreviousStep: more Steps left\");\n        this.setState({disableNextStep: false});    // More steps left, enable the button\n      }\n      \n      // See if there are previous steps and adjust the button\n      if ( previousStep > 0) {\n        console.log(\"gotoPreviousStep: there are previous steps\");\n        this.setState({disablePreviousStep: false});  // Not on the first step, enable the button\n        this.setState({currentStep: previousStep});   // set to the previous step\n      } else {\n        console.log(\"gotoPreviousStep: At the beginning/first\");\n        this.setState({disablePreviousStep: true});   // On the FIRST step, so disable the button\n        this.setState({currentStep: previousStep});\n      }\n\n\n    }\n  \n    previousButton() {\n      return (\n        <Button className='btn btn-secondary btn-spacing' onClick={this.gotoPreviousStep} disabled={this.state.disablePreviousStep}>Previous</Button>\n      );\n    }\n  \n    checkResultsButton() {\n      if (this.props.currentLab.steps[this.state.currentStep].hasOwnProperty(\"checkResults\")) {\n        return(\n          <Button className='btn btn-primary btn-spacing' onClick={this.checkResults} >Check Results</Button>\n        );\n      }\n    }\n  \n  \n    checkResults = () => {\n      this.setState({disableNextStep: false});\n    }\n  \n    render() {\n        console.log(\"StudentView->currentLab:\", this.props.currentLab);\n        if (this.props.currentLab == null) {\n          return(\n            <div className=\"container\"><h1>Preview not available</h1><b>No Lab Selected</b></div>\n          );\n        }\n      return (\n        <div className=\"App\">\n        <h2>{ this.props.currentLab.steps[this.state.currentStep].title}</h2>\n        <div className=\"junk\">\n        <ReactMarkdown \n        source={this.props.currentLab.steps[this.state.currentStep].markdown} \n        renderers={{ code: CodeBlock }}\n        ></ReactMarkdown>\n        </div>\n        <PreviousButton onClick={this.gotoPreviousStep} disabled={this.state.disablePreviousStep}></PreviousButton>\n        <CopyTextButton step={this.props.currentLab.steps[this.state.currentStep]}></CopyTextButton>\n        {this.checkResultsButton()}\n        <Button className='btn btn-primary btn-spacing' onClick={this.gotoNextStep} disabled={this.state.disableNextStep}>Next</Button>\n          </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => ({\n  currentLab: state.lab.currentLab\n})\n\nexport default connect(mapStateToProps)(StudentPage);\n","import React from \"react\";\nimport Navbar from 'react-bootstrap/NavBar';\nimport Nav from 'react-bootstrap/Nav';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\n// eslint-disable-next-line\nconst isActive = (path, match, location) => !!(match || path === location.pathname);\n\nexport const NavBar = (props) => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">eLaborate</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/\" eventKey='/' >Home</Nav.Link>\n          <Nav.Link as={Link} to=\"/preview\" eventKey='/preview' >Preview</Nav.Link>\n          {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">\n              Another action\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">\n              Separated link\n            </NavDropdown.Item>\n          </NavDropdown> */}\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }\n\nexport default NavBar;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport MainPage from './pages/main-page/main-page.page';\nimport StudentPage from './pages/student-view/student-view.page';\nimport NavBar from './components/NavBar/nav-bar.component';\nimport setCurrentLab from './redux/lab/lab.actions';\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentStep: 0,\n      disableNextStep: false,\n      disablePreviousStep: true,\n      allowCopyText: true\n    };\n  }\n\n  render() {\n    return(\n      <BrowserRouter>\n       <NavBar/>\n        <Switch>\n          <Route  exact path='/' component={MainPage}></Route>\n          <Route  exact path='/preview' component={StudentPage}></Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispachToProps = dispatch => ({\n  setCurrentLab: lab => dispatch(setCurrentLab(lab))\n});\n\nexport default connect(null, mapDispachToProps)(App);\n","const INIITIAL_STATE = {\n    currentLab: null\n    // currentLab: {\n    //     steps:[\n    //       {\n    //         title: \"Sample Lab Step 1 from Redux\",\n    //         markdown: \"### Step 1 - Insert a record\\n\" +\n    //         \"testing adding some text\\n\" +\n    //         \"testing adding some text\\n\" +\n    //         \"### Heoping Kiley get Dallas\" +\n    //         \"testing adding some text\\n `asdasdfasdf`\\n\" +\n    //         \"```\\n\" +\n    //         \"db.mycollection.insertOne({ name: 'fred'})\\n\" +\n    //         \"```\\n\",\n    //         copyText: \"db.mycollection.insertOne({ name: 'fred'})\",\n    //         checkResults: \"asfasdf\"\n    //       },\n    //       {\n    //         title: \"Sample Lab Step 2\",\n    //         markdown: \"### Step 2 - Find a record\\n\" +\n    //         \"```\\n\" +\n    //         \"db.mycollection.findOne(\\n\" +\n    //         \"                          {\\n\" +\n    //         \"                            name: 'fred',\\n\" +\n    //         \"                            city: 'Bedrock'\\n\" +\n    //         \"                          }\\n\" +\n    //         \"                        );\\n\" +\n    //         \"```\",\n    //         copyText: \"db.mycollection.findOne()\"\n    //       },\n    //       {\n    //         title: \"Congratulations!!  You have completed this section.\",\n    //         markdown:\"## Section Complete\",\n    //         copyText: null\n    //       }\n    //     ]\n    //   }\n}\n\nconst labReducer = (state = INIITIAL_STATE, action) => {\n    switch(action.type) {\n        case 'SET_CURRENT_LAB':\n            return {\n                ...state,\n                currentLab: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default labReducer;","import { combineReducers } from 'redux';\n\nimport labReducer from './lab/lab.reducer';\n\nexport default combineReducers ({\n    lab: labReducer  \n})","import { createStore, applyMiddleware } from  'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}